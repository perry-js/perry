<!DOCTYPE html>
<html>

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src="http://localhost:8097"></script>
  <title>Perry.js Preview</title>
  <link rel="stylesheet" type="text/css" href="//cdnjs.cloudflare.com/ajax/libs/skeleton/2.0.4/skeleton.min.css">
  <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.15.6/styles/default.min.css">
  <script src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.15.6/highlight.min.js"></script>
  <style>
    .preview {
      padding: 1.8em;
      position: relative;
      border: 1px dashed rgba(0, 0, 0, 0.2);
    }

    .preview::before {
      top: -20px;
      left: 0px;
      font-size: 11px;
      color: rgba(0, 0, 0, 0.5);
      display: block;
      content: 'PERRY.JS PREVIEW AND CODE';
      position: absolute;
    }

    .actions {
      display: flex;
      justify-content: center;
      flex-direction: column;
      margin: 1em 6em;
    }

    .pulse {
      position: fixed;
      bottom: 30px;
      right: 30px;
      display: block;
      width: 40px;
      height: 40px;
      border-radius: 50%;
      background: #1FA49F;
      cursor: pointer;
      box-shadow: 0 0 0 rgba(31, 164, 159, 0.4);
      animation: pulse 2s infinite;
    }

    .pulse:hover {
      animation: none;
    }

    @keyframes pulse {
      0% {
        -moz-box-shadow: 0 0 0 0 rgba(31, 164, 159, 0.4);
        box-shadow: 0 0 0 0 rgba(31, 164, 159, 0.4);
      }
      70% {
        -moz-box-shadow: 0 0 0 10px rgba(31, 164, 159, 0);
        box-shadow: 0 0 0 10px rgba(31, 164, 159, 0);
      }
      100% {
        -moz-box-shadow: 0 0 0 0 rgba(31, 164, 159, 0);
        box-shadow: 0 0 0 0 rgba(31, 164, 159, 0);
      }
    }
  </style>
</head>

<body>
  <div class="container">
    <div class="row">
      <img src="https://raw.githubusercontent.com/perry-js/perry/master/.github/assets/logo.png" alt="Perry.js">
      <h1>Perry.js</h1>
      <h5>Perry.js is a Javascript library to help creating meaningful bug reports.</h5>

      <p>Perry is a spy. His job is to help you and your mates to fight against bugs.</p>

      <p>
        He does it by spying your user usage. He listens to console logs, warns, errors, and user interaction such as clicks.<br />
        He writes all this data inside your page LocalStorage under its specific namespacing.<br />
        After gathering all this data, it wraps it all together into a serializable Bug Report, which contains:
      </p>

      <ul>
        <li>Logs</li>
        <li>Warnings</li>
        <li>Errors</li>
        <li>MouseEvent Data (click, target element, screen position, screen size and so on)</li>
        <li>Cookies Data</li>
        <li>Screen Recording</li>
      </ul>

      <p>
        He also will be able to reproduce these reports automatically by importing this serializable json<br />
        and rerunning the user interaction as if he was the user, so he can show you good a spy can be.
      </p>
    </div>

    <hr />
    <br />

    <div class="preview">
      <p>
        Perry is already taking care of this page you're reading right now.<br />
        This page has a ConsoleLogPlugin implemented for Perry.<br />
        Open DevTools, start recording, play around, submit the form, and see your console.
      </p>

      <button id="action-log">Console: <span style="color: #449;">Log</span></button>
      <button id="action-warn">Console: <span style="color: #f80">Warn</span></button>
      <button id="action-error">Console: <span style="color: #f00">Error</span></button>
      <button id="action-throw-handled-exception"><span style="color: #f00">Throw Handled Exception</span></button>
      <button id="action-throw-unhandled-exception"><span style="color: #f00">Throw Unhandled Exception</span></button>
      <button id="clear-local-storage"><span style="color: #449;">Clear Local Storage</span></button>

      <pre>
        <code class="html">
&lt;script src=&quot;/bundle.js&quot;&gt;&lt;/script&gt;

&lt;script&gt;
  const perry = new Perry({
    log: true,
    clicks: true,
    enableScreenRecording: true,
    plugins: [
      function ConsoleLogPlugin(reportInfo) {
        console.log(&quot;[Perry Report Info]:&quot;, reportInfo);
        console.log(&quot;[Perry Report Info]:&quot;, [
          &quot;&quot;,
          &quot;This was printed by the ConsoleLogPlugin.&quot;,
          &quot;It is implemented inline into this test page.&quot;,
          &quot;To know more about how to implement a Perry Plugin:&quot;,
          &quot;Checkout this page src code or the github repository.&quot;
        ].join(&quot;\n&quot;));
      }
    ]
  });

  document.getElementById(&quot;action-log&quot;).addEventListener(&quot;click&quot;, () =&gt; console.log('ama simple info log'));
  document.getElementById(&quot;action-warn&quot;).addEventListener(&quot;click&quot;, () =&gt; console.warn('ama warning'));
  document.getElementById(&quot;action-error&quot;).addEventListener(&quot;click&quot;, () =&gt; console.error('ama error'));
  document.getElementById(&quot;action-throw-unhandled-exception&quot;).addEventListener(&quot;click&quot;, () =&gt; { throw new Error('ama boom') });
  document.getElementById(&quot;action-throw-handled-exception&quot;).addEventListener(&quot;click&quot;, () =&gt; {
    try {
      throw new Error('ama boom');
    } catch (e) {
      perry.notify(e);
    }
  })
  document.getElementById(&quot;clear-local-storage&quot;).addEventListener(&quot;click&quot;, () =&gt; { localStorage.clear() })
&lt;/script&gt;
        </code>
      </pre>
    </div>
  </div>

  <div class="pulse"></div>
  
  <script>hljs.initHighlightingOnLoad();</script>
  
  <script src="/bundle.js"></script>

  <script>
    /** Initialize Perry.js */
    const perry = new Perry({
      log: true,
      clicks: true,
      enableScreenRecording: true,
      plugins: [
        function ConsoleLogPlugin(reportInfo) {
          console.log("[Perry Report Info]:", reportInfo);
          console.log("[Perry Report Info]:", [
            "",
            "This was printed by the ConsoleLogPlugin.",
            "It is implemented inline into this test page.",
            "To know more about how to implement a Perry Plugin:",
            "Checkout this page src code or the github repository."
          ].join("\n"));
        }
      ]
    });

    document.getElementById("action-log").addEventListener("click", () => console.log('ama simple info log'));
    document.getElementById("action-warn").addEventListener("click", () => console.warn('ama warning'));
    document.getElementById("action-error").addEventListener("click", () => console.error('ama error'));
    document.getElementById("action-throw-unhandled-exception").addEventListener("click", () => { throw new Error('ama boom') });
    document.getElementById("action-throw-handled-exception").addEventListener("click", () => {
      try {
        throw new Error('ama boom');
      } catch (e) {
        perry.notify(e);
      }
    })
    document.getElementById("clear-local-storage").addEventListener("click", () => { localStorage.clear() })
  </script>
</body>

</html>
